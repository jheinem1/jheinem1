{"pageProps":{"note":{"id":"qRu2pgZ7Wd1m1jXmGKwTx","title":"getfenv","vault":{"fsPath":"vault"},"type":"note","desc":"Gets a function environment.","links":[],"anchors":{"examples":{"type":"header","text":"Examples","value":"examples","line":14,"column":0,"depth":2},"getting-current-environment":{"type":"header","text":"Getting Current Environment","value":"getting-current-environment","line":15,"column":0,"depth":3},"getting-the-environment-of-a-function":{"type":"header","text":"Getting the Environment of a Function","value":"getting-the-environment-of-a-function","line":21,"column":0,"depth":3},"getting-the-environment-of-a-stack":{"type":"header","text":"Getting the Environment of a Stack","value":"getting-the-environment-of-a-stack","line":30,"column":0,"depth":3}},"fname":"lang.luau.globals.getfenv","updated":1639705837029,"created":1639705821831,"parent":"DGU9GgAaWP4b1d29cAw6U","children":[],"data":{},"contentHash":"ae02f29cd78f7dcd0ef3720663338f1f","custom":{}},"body":"<h1 id=\"getfenv\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#getfenv\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>getfenv</h1>\n<pre class=\"language-lua\"><code class=\"language-Lua\"><span class=\"token function\">getfenv</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">:</span> number <span class=\"token operator\">|</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> table\n</code></pre>\n<p>Returns the current environment in use by the caller.</p>\n<ul>\n<li>If provided with a function, the environment of the function will be returned.</li>\n<li>If provided with an integer, getfenv will provide the environment of the function at the provided stack level: Level 1 is the function calling getfenv. If stack is 0, getfenv returns the global environment of the current script. When using getfenv to get the current environment of a script, it will return the same table every time within the specific thread.</li>\n</ul>\n<h2 id=\"examples\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#examples\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Examples</h2>\n<h3 id=\"getting-current-environment\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#getting-current-environment\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Getting Current Environment</h3>\n<pre class=\"language-lua\"><code class=\"language-Lua\">myVariable <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello, environments\"</span> <span class=\"token comment\">-- Note: a global variable (non-local)</span>\n<span class=\"token keyword\">local</span> env <span class=\"token operator\">=</span> <span class=\"token function\">getfenv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">[</span><span class=\"token string\">\"myVariable\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">--> Hello, environments</span>\n</code></pre>\n<h3 id=\"getting-the-environment-of-a-function\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#getting-the-environment-of-a-function\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Getting the Environment of a Function</h3>\n<pre class=\"language-lua\"><code class=\"language-Lua\"><span class=\"token keyword\">function</span> <span class=\"token function\">printMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token keyword\">local</span> env <span class=\"token operator\">=</span> <span class=\"token function\">getfenv</span><span class=\"token punctuation\">(</span>printMessage<span class=\"token punctuation\">)</span>\nenv<span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello, function environments\"</span>\n<span class=\"token function\">printMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">--> Hello, function environments</span>\n</code></pre>\n<h3 id=\"getting-the-environment-of-a-stack\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#getting-the-environment-of-a-stack\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Getting the Environment of a Stack</h3>\n<pre class=\"language-lua\"><code class=\"language-Lua\"><span class=\"token keyword\">function</span> <span class=\"token function\">whatIsThePassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> env <span class=\"token operator\">=</span> <span class=\"token function\">getfenv</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- Get the environment 1 level up, or whatever called this function</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span> <span class=\"token comment\">-- Get the password from the environment one level up</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span> <span class=\"token comment\">--> nil</span>\n<span class=\"token keyword\">end</span>\n    \n<span class=\"token keyword\">function</span> <span class=\"token function\">openSesame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> password <span class=\"token operator\">=</span> <span class=\"token string\">\"secret\"</span> <span class=\"token comment\">-- A variable local to openSesame</span>\n    <span class=\"token function\">whatIsThePassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token function\">openSesame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>","noteIndex":{"id":"xZFWhm9RcW9U0FRAKe3za","title":"Root","vault":{"fsPath":"vault"},"type":"note","desc":"","links":[],"anchors":{"programming":{"type":"header","text":"Programming","value":"programming","line":7,"column":0,"depth":1}},"fname":"root","updated":1639701946872,"created":1639681318988,"parent":null,"children":["nbEIB4q9Q9BZuXkJnUAJ5","aOzJDzevUlN6iGm3RKzAD","2vBZPBhuN2xSM1Buyr5zg"],"data":{},"contentHash":"14c27c84fd0c7ac050683f1b674af603","custom":{"nav_order":0,"permalink":"/"},"body":"# Programming\nThis is a Dendron vault dedicated to a bunch of notes for programming languages and other things."},"collectionChildren":null,"customHeadContent":null,"config":{"version":4,"useFMTitle":true,"useNoteTitleForLink":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Dendron","description":"Personal knowledge space","siteLastModified":true,"gh_edit_branch":"main","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"assetsPrefix":"/jheinem1","siteUrl":"https://jheinem1.github.io","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false}},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true}}},"__N_SSG":true}